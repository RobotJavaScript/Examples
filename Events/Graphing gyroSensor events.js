/*  Graph the gyroSensor events.
  Events generated by the gyroSensor are graphed.
  An audible beep is played to also indicate the frequency with which the events occur.
  An event is triggered by a change in the sensor value.
*/
center = { x: 89, y: 64, radius: 60 }            // Create a 'center' object to represent the center of the LCD screen.  Add a radius to be used in expressions for drawing the two circles and line.
function drawCircles(pointer) {                  // A primitive user defined drawing function to draw two circles and a line on the LCD screen.
  clearScreen()                                  // Clear the screen
  circle( center.x, center.y, center.radius )    // Draw a center circle
  x2=center.x+cosin(pointer)*center.radius       // Calculate an x2 coordinate based on the center of the circle offset by the cosine of the gyro times the circle's radius
  y2=center.y-sin(pointer)*center.radius         // Calculate an y2 coordinate based on the center of the circle offset by the sine of the gyro times the circle's radius
  // Note that in calculating y2 the offset is subtracted from the coordinate because the y-scale on the LCD screen increases in values from top to bottom (i.e., 0 on the y axis is at the top of the display)
  line( center.x, center.y, x2, y2 )             // line from the center to the edge of the circle
  fillCircle( x2, y2, 5 )                        // Draw an indicator of the direction
}
function toShowRotation(event) {
  drawCircles(event.value+90)                    // Graph the gyroSensor value passed to this event handler through the parameter 'event'.
  // 90 degrees was added to the sensor value so that the indicators below will point to the top of the LCD screen if the sensor value is zero (0).
  // When the point to be graphed is 90-degrees, the sine has a value of 1 and the cosine has a value of zero.
  drawText(center.x-30, center.y-10, event.value+'  ', 2)  // Try to center the gyroSensor value on the LCD screen.
  beep(40, event.value*0.5+440, 20)              // Make a sound
}
resetGyroSensor()                                // Gyro will start out at zero
                                                 // Add an 'event listener'
addEventListener('gyroSensor',toShowRotation)    // The event listener requires two parameters: name of the event as a string, callback function to be executed when the event occurs
                                                 // Please note that the callback function is entered as a function name without the usual parentheses.
                                                 // The parentheses are omitted from the callback function because the addEventListener() function is not executing the callback.
                                                 // The addEventListener() function adds the callback to the specified event.  It is the specified event that will execute the callback.
waitHereWhile(true)
// In this example, the event handler (i.e., the callback function) 


